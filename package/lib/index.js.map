{"version":3,"file":"index.js","mappings":"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","sources":["webpack://use-sync-query/webpack/bootstrap","webpack://use-sync-query/webpack/runtime/define property getters","webpack://use-sync-query/webpack/runtime/hasOwnProperty shorthand","webpack://use-sync-query/external module \"vue\"","webpack://use-sync-query/./src/index.ts","webpack://use-sync-query/./src/utils/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"ref\"]: () => __WEBPACK_EXTERNAL_MODULE_vue__.ref, [\"watch\"]: () => __WEBPACK_EXTERNAL_MODULE_vue__.watch });","import { Ref, ref, watch } from 'vue';\nimport { isWhiteSpace } from './utils';\n\nexport type IQuery = Record<string, string | string[]>;\n\nexport interface IEncodeDecode {\n  key: string;\n  value: any;\n  query: IQuery;\n}\n\nexport interface IUseSyncQuery {\n  key: string;\n  value?: any;\n  ignoreWhiteSpace?: boolean;\n  decode?: (options: IEncodeDecode) => any;\n  encode?: (options: IEncodeDecode) => Record<string, string>;\n}\n\nexport interface IOptions {\n  ignoreWhiteSpace?: boolean;\n}\n\n/**\n * 同步搜索条件到query\n * @param config\n * @returns\n */\nfunction useSyncQuery(\n  config: IUseSyncQuery[],\n  options: IOptions = { ignoreWhiteSpace: true }\n): Ref<any>[] {\n  let _queryMap: { [props: string]: any } = {};\n  const _config = config;\n  const _refMap: { [props: string]: Ref<any> } = {};\n\n  // 默认配置\n  const defaultConfig = {\n    defaultEncode: ({ key, value }: IEncodeDecode) => ({ [key]: value }),\n    defaultDecode: ({ key, query }: IEncodeDecode) => query[key]\n  };\n\n  const addParams = (\n    urlParams: URLSearchParams,\n    key: string,\n    value: string\n  ) => {\n    // 忽略空白参数\n    if (options?.ignoreWhiteSpace === true && isWhiteSpace(value)) return;\n    urlParams.append(key, encodeURI(value));\n  };\n\n  /**\n   * 将 json 转换成 ?a=1&b=2 的格式\n   * @param json json数据\n   * @returns\n   */\n  const _jsonToQuery = (json: IQuery) => {\n    const urlParams = new URLSearchParams();\n    Object.entries(json).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        value.forEach((item) => {\n          addParams(urlParams, key, item);\n        });\n      } else {\n        addParams(urlParams, key, value);\n      }\n    });\n    return `?${urlParams.toString()}`;\n  };\n\n  // 将 query 数据同步到浏览器 url 的 query 中\n  const _syncToQuery = (query: IQuery = {}) => {\n    const {\n      history: { state },\n      location: { href }\n    } = window;\n    _queryMap = { ..._queryMap, ...query };\n    const queryStr = href.split('?')[0] + _jsonToQuery(_queryMap);\n    window.history.replaceState(state, '', queryStr);\n  };\n\n  /**\n   * 获取 url 的 query\n   */\n  const _syncFromQuery = () => {\n    const query: IQuery = {};\n    const { search, hash } = window.location;\n    const q = (search || hash).replace(/^#\\//, '').replace(/\\?/, '');\n    const urlParams = new URLSearchParams(q);\n\n    for (const key of urlParams.keys()) {\n      const values = urlParams.getAll(key).map((e) => decodeURI(e));\n      query[key] = values?.length === 1 ? values[0] : values;\n    }\n\n    const mergeQuery = { ..._queryMap, ...query };\n    _config.forEach(({ key, value, decode = defaultConfig.defaultDecode }) => {\n      const decodeValue = decode({ query: mergeQuery, key, value });\n      _refMap[key].value = decodeValue;\n    });\n  };\n\n  // 注册需要同步的 query\n  function _registerSyncQuery({\n    key,\n    value,\n    encode = defaultConfig.defaultEncode\n  }: IUseSyncQuery): Ref<any> {\n    const _ref = ref(value);\n    _refMap[key] = _ref;\n    _queryMap = { ..._queryMap, ...encode({ query: _queryMap, value, key }) };\n    watch(\n      () => _ref.value,\n      (newVal: any, oldValue: any) => {\n        if (newVal !== oldValue) {\n          _queryMap = {\n            ..._queryMap,\n            ...encode({ query: _queryMap, value: newVal, key })\n          };\n          _syncToQuery();\n        }\n      }\n    );\n    return _ref;\n  }\n\n  const result = config.map((conf) => _registerSyncQuery({ ...conf }));\n  _syncFromQuery();\n  _syncToQuery();\n  return result;\n}\n\nexport default (conf: IUseSyncQuery[], options?: IOptions): Ref<any>[] =>\n  new (useSyncQuery as any)(conf, options);\n","export const isWhiteSpace = (val: unknown): boolean => {\n  if (val === null || val === undefined || val === '') return true;\n  if (typeof val === 'string') {\n    if (val.trim() === '') return true;\n  }\n  return false;\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE_vue__","ref","watch","x","d","useSyncQuery","config","options","ignoreWhiteSpace","_queryMap","_config","_refMap","defaultConfig","defaultEncode","value","defaultDecode","addParams","urlParams","val","trim","append","encodeURI","_syncToQuery","query","state","window","href","json","queryStr","split","URLSearchParams","entries","forEach","Array","isArray","item","toString","history","replaceState","result","map","conf","encode","_ref","newVal","oldValue","location","search","hash","q","replace","keys","values","getAll","e","decodeURI","length","mergeQuery","decode","decodeValue","_syncFromQuery"],"sourceRoot":""}