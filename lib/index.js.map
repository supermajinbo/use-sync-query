{"version":3,"file":"index.js","mappings":"sBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,sBCElF,MAAM,GAFEI,EAE+B,CAAE,IAAS,IAAMC,EAAgCC,IAAK,MAAW,IAAMD,EAAgCE,OAF3HC,EAAI,CAAC,EAAGlB,EAAoBmB,EAAED,EAAGJ,GAAWI,GAAvDJ,MAAWI,E,gNCqCnB,SAASE,EAAaC,GACpB,IAAIC,EAAsC,CAAC,EACrCC,EAAUF,EACVG,EAAyC,CAAC,EAG1CC,EAAgB,CACpBC,cAAe,SAAC,G,MAAEvB,EAAG,MAAEwB,EAAK,QAAsB,aAAIxB,GAAMwB,EAAK,CAAf,EAClDC,cAAe,SAAC,G,IAAEzB,EAAG,MAA6B,OAAtB,QAA4BA,EAAN,GAuB9C0B,EAAe,SAACC,QAAA,IAAAA,IAAAA,EAAA,IAEP,IAAAC,EAETC,OAAM,cADIC,EACVD,OAAM,cACVV,EAAY,EAAH,KAAQA,GAAcQ,GAC/B,IArBoBI,EACdC,EAoBAC,EAAWH,EAAKI,MAAM,KAAK,IArBbH,EAqB+BZ,EApB7Ca,EAAY,IAAIG,gBACtBjC,OAAOkC,QAAQL,GAAMM,SAAQ,SAAC,G,IAACrC,EAAG,KAAEwB,EAAK,KACnCc,MAAMC,QAAQf,GAChBA,EAAMa,SAAQ,SAACG,GACbR,EAAUS,OAAOzC,EAAKwC,EACxB,IAEAR,EAAUS,OAAOzC,EAAKwB,EAE1B,IACO,WAAIQ,EAAUU,aAWrBb,OAAOc,QAAQC,aAAahB,EAAO,GAAIK,EACzC,EA+CMY,EAAS3B,EAAO4B,KAAI,SAACC,GAAS,OAvBR,EAuB2B,EAAD,GAAMA,GAtB1D/C,EAAG,MACHwB,EAAK,QACL,IAAAwB,OAAAA,OAAM,IAAG,EAAA1B,EAAcC,cAAa,EAE9B0B,GAAO,IAAApC,KAAIW,GACjBH,EAAQrB,GAAOiD,EACf9B,EAAY,EAAH,KAAQA,GAAc6B,EAAO,CAAErB,MAAOR,EAAWK,MAAK,EAAExB,IAAG,MACpE,IAAAc,QACE,WAAM,OAAAmC,EAAKzB,KAAL,IACN,SAAC0B,EAAaC,GACRD,IAAWC,IACbhC,EAAY,EAAH,KACJA,GACA6B,EAAO,CAAErB,MAAOR,EAAWK,MAAO0B,EAAQlD,IAAG,KAElD0B,IAEJ,IAEKuB,EApBT,IAA4B,EAC1BjD,EACAwB,EACA,EAAAwB,EAEMC,CAkB4B,IAGpC,OA7CuB,WAMrB,IALA,IAAMtB,EAAgB,CAAC,EACjB,EAAmBE,OAAOuB,SAAxBC,EAAM,SAAEC,EAAI,OACdC,GAAKF,GAAUC,GAAME,QAAQ,MAAO,IAAIA,QAAQ,KAAM,IACtDxB,EAAY,IAAIG,gBAAgBoB,GAEpB,MAAAvB,EAAUyB,OAAV,eAAkB,CAA/B,IAAMzD,EAAG,KACN0D,EAAS1B,EAAU2B,OAAO3D,GAChC2B,EAAM3B,GAA0B,KAAnB0D,aAAM,EAANA,EAAQE,QAAeF,EAAO,GAAKA,C,CAGlD,IAAMG,EAAa,EAAH,KAAQ1C,GAAcQ,GACtCP,EAAQiB,SAAQ,SAAC,G,IAAErC,EAAG,MAAEwB,EAAK,QAAE,IAAAsC,OACvBC,QAD6B,IAAG,EAAAzC,EAAcG,cAAa,GACtC,CAAEE,MAAOkC,EAAY7D,IAAG,EAAEwB,MAAK,IAC1DH,EAAQrB,GAAKwB,MAAQuC,CACvB,GACF,CA2BAC,GACAtC,IACOmB,CACT,CAEA,iBAAgBE,GACd,WAAK9B,EAAqB8B,EAAK,E","sources":["webpack://use-sync-query/webpack/bootstrap","webpack://use-sync-query/webpack/runtime/define property getters","webpack://use-sync-query/webpack/runtime/hasOwnProperty shorthand","webpack://use-sync-query/external module \"vue\"","webpack://use-sync-query/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"ref\"]: () => __WEBPACK_EXTERNAL_MODULE_vue__.ref, [\"watch\"]: () => __WEBPACK_EXTERNAL_MODULE_vue__.watch });","import { Ref, ref, watch } from 'vue';\n\nexport type IQuery = Record<string, string | string[]>;\n\nexport interface IEncodeDecode {\n  key: string;\n  value: any;\n  query: IQuery;\n}\n\nexport interface IUseSyncQuery {\n  key: string;\n  value?: any;\n  decode?: (options: IEncodeDecode) => any;\n  encode?: (options: IEncodeDecode) => Record<string, string>;\n}\n\n// 获取 query 中的 key\n// const keys = (): string[] => {\n//   const { href } = window.location;\n//   const query = (href.split('?')[1] ?? '').split('&');\n//   const set = new Set<string>();\n//   query.forEach((item) => {\n//     const [key] = item.split('=');\n//     set.add(key);\n//   });\n//   return Array.from(set);\n// };\n\n// @ts-ignore\n// URLSearchParams.prototype.keys = URLSearchParams.prototype.keys ?? keys;\n\n/**\n * 同步搜索条件到query\n * @param config\n * @returns\n */\nfunction useSyncQuery(config: IUseSyncQuery[]): Ref<any>[] {\n  let _queryMap: { [props: string]: any } = {};\n  const _config = config;\n  const _refMap: { [props: string]: Ref<any> } = {};\n\n  // 默认配置\n  const defaultConfig = {\n    defaultEncode: ({ key, value }: IEncodeDecode) => ({ [key]: value }),\n    defaultDecode: ({ key, query }: IEncodeDecode) => query[key]\n  };\n\n  /**\n   * 将 json 转换成 ?a=1&b=2 的格式\n   * @param json json数据\n   * @returns\n   */\n  const _jsonToQuery = (json: IQuery) => {\n    const urlParams = new URLSearchParams();\n    Object.entries(json).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        value.forEach((item) => {\n          urlParams.append(key, item);\n        });\n      } else {\n        urlParams.append(key, value);\n      }\n    });\n    return `?${urlParams.toString()}`;\n  };\n\n  // 将 query 数据同步到浏览器 url 的 query 中\n  const _syncToQuery = (query: IQuery = {}) => {\n    const {\n      history: { state },\n      location: { href }\n    } = window;\n    _queryMap = { ..._queryMap, ...query };\n    const queryStr = href.split('?')[0] + _jsonToQuery(_queryMap);\n    window.history.replaceState(state, '', queryStr);\n  };\n\n  /**\n   * 获取 url 的 query\n   */\n  const _syncFromQuery = () => {\n    const query: IQuery = {};\n    const { search, hash } = window.location;\n    const q = (search || hash).replace(/#\\//, '').replace(/\\?/, '');\n    const urlParams = new URLSearchParams(q);\n    //@ts-ignore\n    for (const key of urlParams.keys()) {\n      const values = urlParams.getAll(key);\n      query[key] = values?.length === 1 ? values[0] : values;\n    }\n\n    const mergeQuery = { ..._queryMap, ...query };\n    _config.forEach(({ key, value, decode = defaultConfig.defaultDecode }) => {\n      const decodeValue = decode({ query: mergeQuery, key, value });\n      _refMap[key].value = decodeValue;\n    });\n  };\n\n  // 注册需要同步的 query\n  function _registerSyncQuery({\n    key,\n    value,\n    encode = defaultConfig.defaultEncode\n  }: IUseSyncQuery): Ref<any> {\n    const _ref = ref(value);\n    _refMap[key] = _ref;\n    _queryMap = { ..._queryMap, ...encode({ query: _queryMap, value, key }) };\n    watch(\n      () => _ref.value,\n      (newVal: any, oldValue: any) => {\n        if (newVal !== oldValue) {\n          _queryMap = {\n            ..._queryMap,\n            ...encode({ query: _queryMap, value: newVal, key })\n          };\n          _syncToQuery();\n        }\n      }\n    );\n    return _ref;\n  }\n\n  const result = config.map((conf) => _registerSyncQuery({ ...conf }));\n  _syncFromQuery();\n  _syncToQuery();\n  return result;\n}\n\nexport default (conf: IUseSyncQuery[]): Ref<any>[] =>\n  new (useSyncQuery as any)(conf);\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE_vue__","ref","watch","x","d","useSyncQuery","config","_queryMap","_config","_refMap","defaultConfig","defaultEncode","value","defaultDecode","_syncToQuery","query","state","window","href","json","urlParams","queryStr","split","URLSearchParams","entries","forEach","Array","isArray","item","append","toString","history","replaceState","result","map","conf","encode","_ref","newVal","oldValue","location","search","hash","q","replace","keys","values","getAll","length","mergeQuery","decode","decodeValue","_syncFromQuery"],"sourceRoot":""}